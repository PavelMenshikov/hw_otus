{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2shkan\\\\golang\\\\hw_otus_new\\\\hw15_go_sql\\\\admin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]); // Убедимся, что это массив, а не null\n\n  useEffect(() => {\n    // Симуляция загрузки данных (замени на свой fetch)\n    setTimeout(() => {\n      setItems([{\n        id: 1,\n        name: \"Растение 1\"\n      }, {\n        id: 2,\n        name: \"Растение 2\"\n      }]);\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0440\\u0430\\u0441\\u0442\\u0435\\u043D\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(items) && items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","items","setItems","setTimeout","id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","item","_c","$RefreshReg$"],"sources":["C:/Users/2shkan/golang/hw_otus_new/hw15_go_sql/admin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]); // Убедимся, что это массив, а не null\r\n\r\n  useEffect(() => {\r\n    // Симуляция загрузки данных (замени на свой fetch)\r\n    setTimeout(() => {\r\n      setItems([\r\n        { id: 1, name: \"Растение 1\" },\r\n        { id: 2, name: \"Растение 2\" },\r\n      ]);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Список растений</h1>\r\n      <ul>\r\n        {Array.isArray(items) && items.map((item) => (\r\n          <li key={item.id}>{item.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd;IACAO,UAAU,CAAC,MAAM;MACfD,QAAQ,CAAC,CACP;QAAEE,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAa,CAAC,EAC7B;QAAED,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAa,CAAC,CAC9B,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBZ,OAAA;MAAAQ,QAAA,EACGK,KAAK,CAACC,OAAO,CAACX,KAAK,CAAC,IAAIA,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACtChB,OAAA;QAAAQ,QAAA,EAAmBQ,IAAI,CAACT;MAAI,GAAnBS,IAAI,CAACV,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACV,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}